#!/bin/bash

# Script de d√©marrage RecyTrack sans MongoDB local
echo "üöÄ D√©marrage de RecyTrack (mode d√©veloppement)..."

# Cr√©er le dossier de logs
mkdir -p logs

# Fonction pour d√©marrer un service
start_service() {
    local service_name=$1
    local service_path=$2
    local port=$3
    
    echo "üì¶ D√©marrage de $service_name..."
    
    cd "$service_path" || exit 1
    
    # D√©marrer le service en arri√®re-plan
    npm start > "../logs/${service_name}.log" 2>&1 &
    
    local pid=$!
    echo $pid > "../logs/${service_name}.pid"
    
    echo "‚úÖ $service_name d√©marr√© (PID: $pid)"
}

# D√©marrer le backend
if [ -d "backend-setup" ]; then
    echo "‚ö†Ô∏è  Note: Le backend n√©cessite MongoDB pour fonctionner correctement."
    echo "   Vous pouvez installer MongoDB localement ou utiliser Docker Compose."
    start_service "Backend" "backend-setup" 5000
else
    echo "‚ùå Dossier backend-setup introuvable"
    exit 1
fi

# D√©marrer le frontend
if [ -d "frontend" ]; then
    cd frontend
    if [ ! -d "node_modules" ]; then
        echo "Installation des d√©pendances frontend..."
        npm install
    fi
    cd ..
    start_service "Frontend" "frontend" 3000
else
    echo "‚ùå Dossier frontend introuvable"
    exit 1
fi

echo ""
echo "üéâ RecyTrack est lanc√© !"
echo ""
echo "üìç Acc√®s:"
echo "   - Frontend: http://localhost:3000"
echo "   - Backend API: http://localhost:5000/api"
echo ""
echo "‚ö†Ô∏è  IMPORTANT: MongoDB doit √™tre install√© et d√©marr√© pour que le backend fonctionne."
echo "   Options:"
echo "   1. Installer MongoDB localement: https://www.mongodb.com/docs/manual/installation/"
echo "   2. Utiliser Docker: docker-compose up -d"
echo ""
echo "üìã Logs:"
echo "   - Backend: tail -f logs/Backend.log"
echo "   - Frontend: tail -f logs/Frontend.log"
echo ""
echo "üõë Pour arr√™ter RecyTrack: ./stop.sh"